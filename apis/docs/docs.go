// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admins": {
            "get": {
                "description": "Возвращает список администраторов с возможностью поиска и сортировки",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Получение списка администраторов",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор администратора",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Дата создания администратора",
                        "name": "created",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Дата обновления администратора",
                        "name": "updated",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Имя администратора",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Email администратора",
                        "name": "email",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/apis.Admin"
                            }
                        }
                    },
                    "400": {
                        "description": "Failed to authenticate.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Создает нового администратора",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Создание администратора",
                "parameters": [
                    {
                        "description": "Данные для создания администратора",
                        "name": "admin",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.AdminCreateForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.Admin"
                        }
                    },
                    "400": {
                        "description": "Failed to authenticate.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admins/auth-refresh": {
            "post": {
                "description": "Refreshes the admin authentication.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Admin Authentication Refresh",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Missing auth admin context",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admins/auth-with-password": {
            "post": {
                "description": "Выполняет аутентификацию администратора с использованием пароля",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Аутентификация администратора с использованием пароля",
                "parameters": [
                    {
                        "description": "Данные аутентификации администратора",
                        "name": "adminLogin",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.AdminLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Failed to authenticate.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admins/confirm-password-reset": {
            "post": {
                "description": "Подтверждает сброс пароля администратора",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Подтверждение сброса пароля администратора",
                "parameters": [
                    {
                        "description": "Данные подтверждения сброса пароля администратора",
                        "name": "passwordResetConfirm",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.AdminPasswordResetConfirm"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Failed to authenticate.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admins/request-password-reset": {
            "post": {
                "description": "Отправляет запрос на сброс пароля администратора",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Запрос на сброс пароля администратора",
                "parameters": [
                    {
                        "description": "Данные запроса на сброс пароля администратора",
                        "name": "passwordResetRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.AdminPasswordResetRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Failed to authenticate.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admins/{id}": {
            "get": {
                "description": "Возвращает информацию об указанном администраторе по его идентификатору",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Просмотр администратора",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор администратора",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.Admin"
                        }
                    },
                    "400": {
                        "description": "Failed to authenticate.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет указанного администратора по его идентификатору",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Удаление администратора",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор администратора",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Failed to authenticate.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Обновляет информацию об указанном администраторе по его идентификатору",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Обновление администратора",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор администратора",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные для обновления администратора",
                        "name": "admin",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.AdminUpdateForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.Admin"
                        }
                    },
                    "400": {
                        "description": "Not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/backups": {
            "get": {
                "security": [
                    {
                        "AdminAuth": []
                    }
                ],
                "description": "Возвращает список доступных резервных копий",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Backups"
                ],
                "summary": "Получение списка резервных копий",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/apis.BackupFileInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Failed to authenticate.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AdminAuth": []
                    }
                ],
                "description": "Создает новую резервную копию",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Backups"
                ],
                "summary": "Создание резервной копии",
                "parameters": [
                    {
                        "description": "Данные для создания резервной копии",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.BackupCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Failed to authenticate.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/backups/{key}": {
            "get": {
                "security": [
                    {
                        "AdminAuth": []
                    }
                ],
                "description": "Загружает резервную копию по указанному ключу",
                "tags": [
                    "Backups"
                ],
                "summary": "Загрузка резервной копии",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Ключ резервной копии",
                        "name": "key",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Токен доступа",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Not exists.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AdminAuth": []
                    }
                ],
                "description": "Удаляет резервную копию по указанному ключу",
                "tags": [
                    "Backups"
                ],
                "summary": "Удаление резервной копии",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Ключ резервной копии",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Failed to authenticate.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/backups/{key}/restore": {
            "post": {
                "security": [
                    {
                        "AdminAuth": []
                    }
                ],
                "description": "Запускает процесс восстановления резервной копии по указанному ключу",
                "tags": [
                    "Backups"
                ],
                "summary": "Восстановление резервной копии",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Ключ резервной копии",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Failed to authenticate.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/collections": {
            "get": {
                "security": [
                    {
                        "AdminAuth": []
                    }
                ],
                "description": "Возвращает список коллекций с возможностью фильтрации и сортировки",
                "tags": [
                    "Collections"
                ],
                "summary": "Получить список коллекций",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID коллекции",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Дата создания коллекции в формате ISO8601",
                        "name": "created",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Дата обновления коллекции в формате ISO8601",
                        "name": "updated",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Название коллекции",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Системная коллекция",
                        "name": "system",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Тип коллекции",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.SearchResult"
                        }
                    },
                    "400": {
                        "description": "Failed to authenticate.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AdminAuth": []
                    }
                ],
                "description": "Создает новую коллекцию",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Collections"
                ],
                "summary": "Создать коллекцию",
                "parameters": [
                    {
                        "description": "Данные для создания коллекции",
                        "name": "collection",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.CollectionCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.Collection"
                        }
                    },
                    "400": {
                        "description": "Failed to authenticate.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/collections/import": {
            "post": {
                "security": [
                    {
                        "AdminAuth": []
                    }
                ],
                "description": "Импортирует коллекции из переданных данных",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Collections"
                ],
                "summary": "Импортировать коллекции",
                "parameters": [
                    {
                        "description": "Данные для импорта коллекций",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.CollectionsImportRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Failed to authenticate.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/collections/{collection}": {
            "get": {
                "security": [
                    {
                        "AdminAuth": []
                    }
                ],
                "description": "Возвращает информацию о коллекции по ее имени или ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Collections"
                ],
                "summary": "Просмотреть коллекцию",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Имя или ID коллекции",
                        "name": "collection",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.Collection"
                        }
                    },
                    "400": {
                        "description": "Failed to authenticate.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AdminAuth": []
                    }
                ],
                "description": "Удаляет коллекцию по ее имени или ID",
                "tags": [
                    "Collections"
                ],
                "summary": "Удалить коллекцию",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Имя или ID коллекции",
                        "name": "collection",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "AdminAuth": []
                    }
                ],
                "description": "Обновляет информацию о коллекции по ее имени или ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Collections"
                ],
                "summary": "Обновить коллекцию",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Имя или ID коллекции",
                        "name": "collection",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные для обновления коллекции",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.CollectionCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.Collection"
                        }
                    },
                    "400": {
                        "description": "Failed to authenticate.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/collections/{collection}/auth-methods": {
            "get": {
                "security": [
                    {
                        "AdminAuth": []
                    }
                ],
                "description": "Возвращает доступные методы аутентификации для указанной коллекции",
                "tags": [
                    "Record Auth"
                ],
                "summary": "Получить методы аутентификации",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор коллекции",
                        "name": "collection",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "методы аутентификации успешно получены"
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/collections/{collection}/auth-refresh": {
            "post": {
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "description": "Обновляет данные аутентификации для указанной записи",
                "tags": [
                    "Record Auth"
                ],
                "summary": "Обновить данные аутентификации",
                "responses": {
                    "200": {
                        "description": "данные аутентификации успешно обновленны"
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/collections/{collection}/auth-with-oauth2": {
            "post": {
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "description": "Выполняет аутентификацию с использованием протокола OAuth2 для указанной коллекции",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Record Auth"
                ],
                "summary": "Аутентификация с использованием OAuth2",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор коллекции",
                        "name": "collection",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "аутентификация с использованием OAuth2 успешна"
                    },
                    "400": {
                        "description": "Failed to authenticate.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/collections/{collection}/auth-with-password": {
            "post": {
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "description": "Выполняет аутентификацию с использованием пароля для указанной коллекции",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Record Auth"
                ],
                "summary": "Аутентификация с использованием пароля",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор коллекции",
                        "name": "collection",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Аутентификация с использованием пароля успешна"
                    },
                    "400": {
                        "description": "Failed to authenticate.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/collections/{collection}/confirm-email-change": {
            "post": {
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "description": "Подтверждает изменение электронной почты для указанной коллекции",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Record Auth"
                ],
                "summary": "Подтверждение изменения электронной почты",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор коллекции",
                        "name": "collection",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Подтверждение изменения электронной почты успешно"
                    },
                    "400": {
                        "description": "Failed to authenticate.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/collections/{collection}/confirm-password-reset": {
            "post": {
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "description": "Подтверждает сброс пароля для указанной коллекции",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Record Auth"
                ],
                "summary": "Подтверждение сброса пароля",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор коллекции",
                        "name": "collection",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Подтверждение сброса пароля успешно"
                    },
                    "400": {
                        "description": "Failed to authenticate.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/collections/{collection}/confirm-verification": {
            "post": {
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "description": "Подтверждает верификацию для указанной коллекции",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Record Auth"
                ],
                "summary": "Подтверждение верификации",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор коллекции",
                        "name": "collection",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Подтверждение верификации успешно"
                    },
                    "400": {
                        "description": "Failed to authenticate.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/collections/{collection}/records": {
            "get": {
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "description": "Возвращает список записей из указанной коллекции",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Record"
                ],
                "summary": "Получение списка записей",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор коллекции",
                        "name": "collection",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Получение списка записей успешно"
                    },
                    "400": {
                        "description": "Failed to authenticate.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "description": "Создает новую запись в указанной коллекции",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Record"
                ],
                "summary": "Создание записи",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор коллекции",
                        "name": "collection",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные для создания записи",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.CreateRecordRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Создание записи успешно"
                    },
                    "400": {
                        "description": "Failed to authenticate.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/collections/{collection}/records/{id}": {
            "get": {
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "description": "Возвращает информацию о указанной записи из указанной коллекции",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Record"
                ],
                "summary": "Просмотр записи",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор коллекции",
                        "name": "collection",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор записи",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Просмотр записи успешен"
                    },
                    "400": {
                        "description": "Failed to authenticate.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "description": "Удаляет указанную запись из указанной коллекции",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Record"
                ],
                "summary": "Удаление записи",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор коллекции",
                        "name": "collection",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор записи",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Удаление записи успешно"
                    },
                    "400": {
                        "description": "Failed to authenticate.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "description": "Обновляет информацию о указанной записи в указанной коллекции",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Record"
                ],
                "summary": "Обновление записи",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор коллекции",
                        "name": "collection",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор записи",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные для обновления записи",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.CreateRecordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Обновление записи успешно"
                    },
                    "400": {
                        "description": "Failed to authenticate.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/collections/{collection}/records/{id}/external-auths": {
            "get": {
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "description": "Возвращает список внешних аутентификаций для указанной записи в указанной коллекции",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Record Auth"
                ],
                "summary": "Получение внешних аутентификаций записи",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор коллекции",
                        "name": "collection",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор записи",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/apis.ExternalAuthResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed to authenticate.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/collections/{collection}/records/{id}/external-auths/{provider}": {
            "delete": {
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "description": "Отвязывает указанную внешнюю аутентификацию от указанной записи в указанной коллекции",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Record Auth"
                ],
                "summary": "Отвязывание внешней аутентификации",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор коллекции",
                        "name": "collection",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор записи",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Провайдер внешней аутентификации",
                        "name": "provider",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Отвязывание внешней аутентификации успешно"
                    },
                    "400": {
                        "description": "Failed to authenticate.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/collections/{collection}/request-email-change": {
            "post": {
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "description": "Отправляет запрос на изменение электронной почты для указанной коллекции",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Record Auth"
                ],
                "summary": "Запрос изменения электронной почты",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор коллекции",
                        "name": "collection",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Запрос изменения электронной почты успешен"
                    },
                    "400": {
                        "description": "Failed to authenticate.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/collections/{collection}/request-password-reset": {
            "post": {
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "description": "Отправляет запрос на сброс пароля для указанной коллекции",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Record Auth"
                ],
                "summary": "Запрос сброса пароля",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор коллекции",
                        "name": "collection",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Запрос сброса пароля успешнен"
                    },
                    "400": {
                        "description": "Failed to authenticate.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/collections/{collection}/request-verification": {
            "post": {
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "description": "Отправляет запрос на верификацию для указанной коллекции",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Record Auth"
                ],
                "summary": "Запрос верификации",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор коллекции",
                        "name": "collection",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Запрос верификации успешен"
                    },
                    "400": {
                        "description": "Failed to authenticate.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/files/token": {
            "post": {
                "security": [
                    {
                        "AdminAuth": []
                    },
                    {
                        "RecordAuth": []
                    }
                ],
                "description": "Генерирует токен для доступа к файлу",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Files"
                ],
                "summary": "Генерировать токен файла",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Failed to authenticate.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/files/{collection}/{recordId}/{filename}": {
            "get": {
                "security": [
                    {
                        "AdminAuth": []
                    },
                    {
                        "RecordAuth": []
                    }
                ],
                "description": "Загружает файл",
                "tags": [
                    "Files"
                ],
                "summary": "Загрузить файл",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор коллекции",
                        "name": "collection",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор записи",
                        "name": "recordId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Имя файла",
                        "name": "filename",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Токен доступа к файлу",
                        "name": "token",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Размер эскиза (если применимо)",
                        "name": "thumb",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Файл загружен"
                    },
                    "400": {
                        "description": "Failed to authenticate.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Not exists.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "head": {
                "security": [
                    {
                        "AdminAuth": []
                    },
                    {
                        "RecordAuth": []
                    }
                ],
                "description": "Загружает файл",
                "tags": [
                    "Files"
                ],
                "summary": "Загрузить файл",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор коллекции",
                        "name": "collection",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор записи",
                        "name": "recordId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Имя файла",
                        "name": "filename",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Токен доступа к файлу",
                        "name": "token",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Размер эскиза (если применимо)",
                        "name": "thumb",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Файл загружен"
                    },
                    "400": {
                        "description": "Failed to authenticate.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Not exists.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/realtime": {
            "get": {
                "security": [
                    {
                        "AdminAuth": []
                    }
                ],
                "description": "Устанавливает соединение в реальном времени",
                "tags": [
                    "Realtime"
                ],
                "summary": "Установить соединение в реальном времени",
                "responses": {
                    "200": {
                        "description": "Соединение установлено"
                    },
                    "400": {
                        "description": "Failed to authenticate.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AdminAuth": []
                    }
                ],
                "description": "Устанавливает подписки для клиента в реальном времени",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Realtime"
                ],
                "summary": "Установить подписки в реальном времени",
                "parameters": [
                    {
                        "description": "Данные подписок",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.RealtimeSubscribeForm"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Подписки успешно установлены"
                    },
                    "400": {
                        "description": "Failed to authenticate.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Not exists.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/settings": {
            "get": {
                "security": [
                    {
                        "AdminAuth": []
                    }
                ],
                "description": "Возвращает список всех настроек",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Settings"
                ],
                "summary": "Получение списка настроек",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.Settings"
                        }
                    },
                    "400": {
                        "description": "Failed to authenticate.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "AdminAuth": []
                    }
                ],
                "description": "Обновляет указанные настройки",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Settings"
                ],
                "summary": "Обновление настроек",
                "parameters": [
                    {
                        "description": "Данные для обновления настроек",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.UpdateSettingsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Обновление настроек успешно"
                    },
                    "400": {
                        "description": "Failed to authenticate.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/settings/apple/generate-client-secret": {
            "post": {
                "security": [
                    {
                        "AdminAuth": []
                    }
                ],
                "description": "Генерирует секретный ключ для использования при авторизации Apple",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Settings"
                ],
                "summary": "Генерация секретного ключа для авторизации Apple",
                "responses": {
                    "200": {
                        "description": "Генерация секретного ключа для авторизации Apple успешно"
                    },
                    "400": {
                        "description": "Failed to authenticate.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/settings/test/email": {
            "post": {
                "security": [
                    {
                        "AdminAuth": []
                    }
                ],
                "description": "Проверяет настройки для отправки электронной почты",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Settings"
                ],
                "summary": "Тестирование настроек для электронной почты",
                "parameters": [
                    {
                        "description": "Данные для тестирования настроек электронной почты",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.TestEmailSettingsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Тестирование настроек для электронной почты успешно"
                    },
                    "400": {
                        "description": "Failed to authenticate.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/settings/test/s3": {
            "post": {
                "security": [
                    {
                        "AdminAuth": []
                    }
                ],
                "description": "Проверяет настройки для хранилища S3",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Settings"
                ],
                "summary": "Тестирование настроек для хранилища S3",
                "parameters": [
                    {
                        "description": "Данные для тестирования настроек S3",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.TestS3SettingsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Тестирование настроек для хранилища S3 успешно"
                    },
                    "400": {
                        "description": "Failed to authenticate.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "apis.Admin": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "integer"
                },
                "created": {
                    "type": "object"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "updated": {
                    "type": "object"
                }
            }
        },
        "apis.AdminCreateForm": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "passwordConfirm": {
                    "type": "string"
                }
            }
        },
        "apis.AdminLogin": {
            "type": "object",
            "properties": {
                "identity": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "apis.AdminPasswordResetConfirm": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "passwordConfirm": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "apis.AdminPasswordResetRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "apis.AdminUpdateForm": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "passwordConfirm": {
                    "type": "string"
                }
            }
        },
        "apis.AuthProviderConfig": {
            "type": "object",
            "properties": {
                "authUrl": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "tokenUrl": {
                    "type": "string"
                },
                "userApiUrl": {
                    "type": "string"
                }
            }
        },
        "apis.BackupCreateRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "apis.BackupFileInfo": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "modified": {
                    "type": "object"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "apis.BackupsConfig": {
            "type": "object",
            "properties": {
                "cron": {
                    "description": "Cron is a cron expression to schedule auto backups, eg. \"* * * * *\".\n\nLeave it empty to disable the auto backups functionality.",
                    "type": "string"
                },
                "cronMaxKeep": {
                    "description": "CronMaxKeep is the the max number of cron generated backups to\nkeep before removing older entries.\n\nThis field works only when the cron config has valid cron expression.",
                    "type": "integer"
                },
                "s3": {
                    "description": "S3 is an optional S3 storage config specifying where to store the app backups.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/apis.S3Config"
                        }
                    ]
                }
            }
        },
        "apis.Collection": {
            "type": "object",
            "properties": {
                "createRule": {
                    "type": "string"
                },
                "created": {
                    "type": "object"
                },
                "deleteRule": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "listRule": {
                    "description": "rules",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "options": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "schema": {
                    "type": "object"
                },
                "system": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "updateRule": {
                    "type": "string"
                },
                "updated": {
                    "type": "object"
                },
                "viewRule": {
                    "type": "string"
                }
            }
        },
        "apis.CollectionCreateRequest": {
            "type": "object",
            "properties": {
                "createRule": {
                    "type": "string"
                },
                "deleteRule": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "listRule": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "options": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "schema": {
                    "type": "object"
                },
                "system": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "updateRule": {
                    "type": "string"
                },
                "viewRule": {
                    "type": "string"
                }
            }
        },
        "apis.CollectionsImportRequest": {
            "type": "object",
            "properties": {
                "collections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apis.Collection"
                    }
                },
                "deleteMissing": {
                    "type": "boolean"
                }
            }
        },
        "apis.CreateRecordRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "emailVisibility": {
                    "type": "boolean"
                },
                "id": {
                    "description": "base model fields",
                    "type": "string"
                },
                "oldPassword": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "passwordConfirm": {
                    "type": "string"
                },
                "username": {
                    "description": "auth collection fields\n---",
                    "type": "string"
                },
                "verified": {
                    "type": "boolean"
                }
            }
        },
        "apis.EmailAuthConfig": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "exceptDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "minPasswordLength": {
                    "type": "integer"
                },
                "onlyDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "apis.EmailTemplate": {
            "type": "object",
            "properties": {
                "actionUrl": {
                    "type": "string"
                },
                "body": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                }
            }
        },
        "apis.ExternalAuthResponse": {
            "type": "object",
            "properties": {
                "collectionId": {
                    "type": "string"
                },
                "created": {
                    "type": "object"
                },
                "id": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "providerId": {
                    "type": "string"
                },
                "recordId": {
                    "type": "string"
                },
                "updated": {
                    "type": "object"
                }
            }
        },
        "apis.LogsConfig": {
            "type": "object",
            "properties": {
                "maxDays": {
                    "type": "integer"
                }
            }
        },
        "apis.RealtimeSubscribeForm": {
            "type": "object",
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "subscriptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "apis.S3Config": {
            "type": "object",
            "properties": {
                "accessKey": {
                    "type": "string"
                },
                "bucket": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "endpoint": {
                    "type": "string"
                },
                "forcePathStyle": {
                    "type": "boolean"
                },
                "region": {
                    "type": "string"
                },
                "secret": {
                    "type": "string"
                }
            }
        },
        "apis.SearchResult": {
            "type": "object",
            "properties": {
                "items": {},
                "page": {
                    "type": "integer"
                },
                "perPage": {
                    "type": "integer"
                },
                "totalItems": {
                    "type": "integer"
                },
                "totalPages": {
                    "type": "integer"
                }
            }
        },
        "apis.Settings": {
            "type": "object",
            "properties": {
                "adminAuthToken": {
                    "$ref": "#/definitions/apis.TokenConfig"
                },
                "adminFileToken": {
                    "$ref": "#/definitions/apis.TokenConfig"
                },
                "adminPasswordResetToken": {
                    "$ref": "#/definitions/apis.TokenConfig"
                },
                "appleAuth": {
                    "$ref": "#/definitions/apis.AuthProviderConfig"
                },
                "backups": {
                    "$ref": "#/definitions/apis.BackupsConfig"
                },
                "discordAuth": {
                    "$ref": "#/definitions/apis.AuthProviderConfig"
                },
                "emailAuth": {
                    "description": "Deprecated: Will be removed in v0.9+",
                    "allOf": [
                        {
                            "$ref": "#/definitions/apis.EmailAuthConfig"
                        }
                    ]
                },
                "facebookAuth": {
                    "$ref": "#/definitions/apis.AuthProviderConfig"
                },
                "giteaAuth": {
                    "$ref": "#/definitions/apis.AuthProviderConfig"
                },
                "giteeAuth": {
                    "$ref": "#/definitions/apis.AuthProviderConfig"
                },
                "githubAuth": {
                    "$ref": "#/definitions/apis.AuthProviderConfig"
                },
                "gitlabAuth": {
                    "$ref": "#/definitions/apis.AuthProviderConfig"
                },
                "googleAuth": {
                    "$ref": "#/definitions/apis.AuthProviderConfig"
                },
                "kakaoAuth": {
                    "$ref": "#/definitions/apis.AuthProviderConfig"
                },
                "livechatAuth": {
                    "$ref": "#/definitions/apis.AuthProviderConfig"
                },
                "logs": {
                    "$ref": "#/definitions/apis.LogsConfig"
                },
                "meta": {
                    "type": "object",
                    "properties": {
                        "appName": {
                            "type": "string"
                        },
                        "appUrl": {
                            "type": "string"
                        },
                        "confirmEmailChangeTemplate": {
                            "$ref": "#/definitions/apis.EmailTemplate"
                        },
                        "hideControls": {
                            "type": "boolean"
                        },
                        "resetPasswordTemplate": {
                            "$ref": "#/definitions/apis.EmailTemplate"
                        },
                        "senderAddress": {
                            "type": "string"
                        },
                        "senderName": {
                            "type": "string"
                        },
                        "verificationTemplate": {
                            "$ref": "#/definitions/apis.EmailTemplate"
                        }
                    }
                },
                "microsoftAuth": {
                    "$ref": "#/definitions/apis.AuthProviderConfig"
                },
                "oidc2Auth": {
                    "$ref": "#/definitions/apis.AuthProviderConfig"
                },
                "oidc3Auth": {
                    "$ref": "#/definitions/apis.AuthProviderConfig"
                },
                "oidcAuth": {
                    "$ref": "#/definitions/apis.AuthProviderConfig"
                },
                "recordAuthToken": {
                    "$ref": "#/definitions/apis.TokenConfig"
                },
                "recordEmailChangeToken": {
                    "$ref": "#/definitions/apis.TokenConfig"
                },
                "recordFileToken": {
                    "$ref": "#/definitions/apis.TokenConfig"
                },
                "recordPasswordResetToken": {
                    "$ref": "#/definitions/apis.TokenConfig"
                },
                "recordVerificationToken": {
                    "$ref": "#/definitions/apis.TokenConfig"
                },
                "s3": {
                    "$ref": "#/definitions/apis.S3Config"
                },
                "smtp": {
                    "$ref": "#/definitions/apis.SmtpConfig"
                },
                "spotifyAuth": {
                    "$ref": "#/definitions/apis.AuthProviderConfig"
                },
                "stravaAuth": {
                    "$ref": "#/definitions/apis.AuthProviderConfig"
                },
                "twitchAuth": {
                    "$ref": "#/definitions/apis.AuthProviderConfig"
                },
                "twitterAuth": {
                    "$ref": "#/definitions/apis.AuthProviderConfig"
                }
            }
        },
        "apis.SmtpConfig": {
            "type": "object",
            "properties": {
                "authMethod": {
                    "description": "SMTP AUTH - PLAIN (default) or LOGIN",
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "host": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "tls": {
                    "description": "Whether to enforce TLS encryption for the mail server connection.\n\nWhen set to false StartTLS command is send, leaving the server\nto decide whether to upgrade the connection or not.",
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "apis.TestEmailSettingsRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "apis.TestS3SettingsRequest": {
            "type": "object",
            "properties": {
                "filesystem": {
                    "description": "The name of the filesystem - storage or backups",
                    "type": "string"
                }
            }
        },
        "apis.TokenConfig": {
            "type": "object",
            "properties": {
                "duration": {
                    "type": "integer"
                },
                "secret": {
                    "type": "string"
                }
            }
        },
        "apis.UpdateSettingsRequest": {
            "type": "object",
            "properties": {
                "adminAuthToken": {
                    "$ref": "#/definitions/apis.TokenConfig"
                },
                "adminFileToken": {
                    "$ref": "#/definitions/apis.TokenConfig"
                },
                "adminPasswordResetToken": {
                    "$ref": "#/definitions/apis.TokenConfig"
                },
                "appleAuth": {
                    "$ref": "#/definitions/apis.AuthProviderConfig"
                },
                "backups": {
                    "$ref": "#/definitions/apis.BackupsConfig"
                },
                "discordAuth": {
                    "$ref": "#/definitions/apis.AuthProviderConfig"
                },
                "emailAuth": {
                    "description": "Deprecated: Will be removed in v0.9+",
                    "allOf": [
                        {
                            "$ref": "#/definitions/apis.EmailAuthConfig"
                        }
                    ]
                },
                "facebookAuth": {
                    "$ref": "#/definitions/apis.AuthProviderConfig"
                },
                "giteaAuth": {
                    "$ref": "#/definitions/apis.AuthProviderConfig"
                },
                "giteeAuth": {
                    "$ref": "#/definitions/apis.AuthProviderConfig"
                },
                "githubAuth": {
                    "$ref": "#/definitions/apis.AuthProviderConfig"
                },
                "gitlabAuth": {
                    "$ref": "#/definitions/apis.AuthProviderConfig"
                },
                "googleAuth": {
                    "$ref": "#/definitions/apis.AuthProviderConfig"
                },
                "kakaoAuth": {
                    "$ref": "#/definitions/apis.AuthProviderConfig"
                },
                "livechatAuth": {
                    "$ref": "#/definitions/apis.AuthProviderConfig"
                },
                "logs": {
                    "$ref": "#/definitions/apis.LogsConfig"
                },
                "meta": {
                    "type": "object",
                    "properties": {
                        "appName": {
                            "type": "string"
                        },
                        "appUrl": {
                            "type": "string"
                        },
                        "confirmEmailChangeTemplate": {
                            "$ref": "#/definitions/apis.EmailTemplate"
                        },
                        "hideControls": {
                            "type": "boolean"
                        },
                        "resetPasswordTemplate": {
                            "$ref": "#/definitions/apis.EmailTemplate"
                        },
                        "senderAddress": {
                            "type": "string"
                        },
                        "senderName": {
                            "type": "string"
                        },
                        "verificationTemplate": {
                            "$ref": "#/definitions/apis.EmailTemplate"
                        }
                    }
                },
                "microsoftAuth": {
                    "$ref": "#/definitions/apis.AuthProviderConfig"
                },
                "oidc2Auth": {
                    "$ref": "#/definitions/apis.AuthProviderConfig"
                },
                "oidc3Auth": {
                    "$ref": "#/definitions/apis.AuthProviderConfig"
                },
                "oidcAuth": {
                    "$ref": "#/definitions/apis.AuthProviderConfig"
                },
                "recordAuthToken": {
                    "$ref": "#/definitions/apis.TokenConfig"
                },
                "recordEmailChangeToken": {
                    "$ref": "#/definitions/apis.TokenConfig"
                },
                "recordFileToken": {
                    "$ref": "#/definitions/apis.TokenConfig"
                },
                "recordPasswordResetToken": {
                    "$ref": "#/definitions/apis.TokenConfig"
                },
                "recordVerificationToken": {
                    "$ref": "#/definitions/apis.TokenConfig"
                },
                "s3": {
                    "$ref": "#/definitions/apis.S3Config"
                },
                "smtp": {
                    "$ref": "#/definitions/apis.SmtpConfig"
                },
                "spotifyAuth": {
                    "$ref": "#/definitions/apis.AuthProviderConfig"
                },
                "stravaAuth": {
                    "$ref": "#/definitions/apis.AuthProviderConfig"
                },
                "twitchAuth": {
                    "$ref": "#/definitions/apis.AuthProviderConfig"
                },
                "twitterAuth": {
                    "$ref": "#/definitions/apis.AuthProviderConfig"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
